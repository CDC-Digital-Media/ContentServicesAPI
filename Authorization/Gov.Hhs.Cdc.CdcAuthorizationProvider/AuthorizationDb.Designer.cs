// Copyright [2015] [Centers for Disease Control and Prevention] 
// Licensed under the CDC Custom Open Source License 1 (the 'License'); 
// you may not use this file except in compliance with the License. 
// You may obtain a copy of the License at
// 
//   http://t.cdc.gov/O4O
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an 'AS IS' BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ContentServices_SourceForgeModel", "FK_UserRoles_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Gov.Hhs.Cdc.Authorization.Role), "UserRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Gov.Hhs.Cdc.Authorization.UserRole), true)]
[assembly: EdmRelationshipAttribute("ContentServices_SourceForgeModel", "FK_UserRoles_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Gov.Hhs.Cdc.Authorization.User), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Gov.Hhs.Cdc.Authorization.UserRole), true)]
[assembly: EdmRelationshipAttribute("ContentServices_SourceForgeModel", "FK_UserOrganizations_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Gov.Hhs.Cdc.Authorization.User), "UserOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Gov.Hhs.Cdc.Authorization.UserOrganization), true)]
[assembly: EdmRelationshipAttribute("ContentServices_SourceForgeModel", "FK_MediaSetStatic_MediaSet", "MediaSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Gov.Hhs.Cdc.Authorization.MediaSet), "MediaSetStatic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Gov.Hhs.Cdc.Authorization.MediaSetStatic), true)]
[assembly: EdmRelationshipAttribute("ContentServices_SourceForgeModel", "MediaSetRoles", "MediaSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Gov.Hhs.Cdc.Authorization.MediaSet), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Gov.Hhs.Cdc.Authorization.UserRole))]
[assembly: EdmRelationshipAttribute("ContentServices_SourceForgeModel", "FK_MediaSetDynamic_MediaSet", "MediaSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Gov.Hhs.Cdc.Authorization.MediaSet), "MediaSetDynamic", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Gov.Hhs.Cdc.Authorization.MediaSetDynamic), true)]

#endregion

namespace Gov.Hhs.Cdc.Authorization
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AuthorizationDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AuthorizationDbEntities object using the connection string found in the 'AuthorizationDbEntities' section of the application configuration file.
        /// </summary>
        public AuthorizationDbEntities() : base("name=AuthorizationDbEntities", "AuthorizationDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AuthorizationDbEntities object.
        /// </summary>
        public AuthorizationDbEntities(string connectionString) : base(connectionString, "AuthorizationDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AuthorizationDbEntities object.
        /// </summary>
        public AuthorizationDbEntities(EntityConnection connection) : base(connection, "AuthorizationDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdministrativeUser> AdministrativeUsers
        {
            get
            {
                if ((_AdministrativeUsers == null))
                {
                    _AdministrativeUsers = base.CreateObjectSet<AdministrativeUser>("AdministrativeUsers");
                }
                return _AdministrativeUsers;
            }
        }
        private ObjectSet<AdministrativeUser> _AdministrativeUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserOrganization> UserOrganizations
        {
            get
            {
                if ((_UserOrganizations == null))
                {
                    _UserOrganizations = base.CreateObjectSet<UserOrganization>("UserOrganizations");
                }
                return _UserOrganizations;
            }
        }
        private ObjectSet<UserOrganization> _UserOrganizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MediaSet> MediaSets
        {
            get
            {
                if ((_MediaSets == null))
                {
                    _MediaSets = base.CreateObjectSet<MediaSet>("MediaSets");
                }
                return _MediaSets;
            }
        }
        private ObjectSet<MediaSet> _MediaSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MediaSetDynamic> MediaSetDynamics
        {
            get
            {
                if ((_MediaSetDynamics == null))
                {
                    _MediaSetDynamics = base.CreateObjectSet<MediaSetDynamic>("MediaSetDynamics");
                }
                return _MediaSetDynamics;
            }
        }
        private ObjectSet<MediaSetDynamic> _MediaSetDynamics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MediaSetStatic> MediaSetStatics
        {
            get
            {
                if ((_MediaSetStatics == null))
                {
                    _MediaSetStatics = base.CreateObjectSet<MediaSetStatic>("MediaSetStatics");
                }
                return _MediaSetStatics;
            }
        }
        private ObjectSet<MediaSetStatic> _MediaSetStatics;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdministrativeUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdministrativeUsers(AdministrativeUser administrativeUser)
        {
            base.AddObject("AdministrativeUsers", administrativeUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserOrganizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserOrganizations(UserOrganization userOrganization)
        {
            base.AddObject("UserOrganizations", userOrganization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaSets(MediaSet mediaSet)
        {
            base.AddObject("MediaSets", mediaSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaSetDynamics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaSetDynamics(MediaSetDynamic mediaSetDynamic)
        {
            base.AddObject("MediaSetDynamics", mediaSetDynamic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaSetStatics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaSetStatics(MediaSetStatic mediaSetStatic)
        {
            base.AddObject("MediaSetStatics", mediaSetStatic);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="middleName">No Metadata Documentation available.</param>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="networkID">No Metadata Documentation available.</param>
        /// <param name="emailAddress">No Metadata Documentation available.</param>
        /// <param name="organizationID">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="userGuid">No Metadata Documentation available.</param>
        public int CreateUser(global::System.String firstName, global::System.String middleName, global::System.String lastName, global::System.String networkID, global::System.String emailAddress, Nullable<global::System.Int32> organizationID, global::System.String password, Nullable<global::System.Guid> userGuid)
        {
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("FirstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("FirstName", typeof(global::System.String));
            }
    
            ObjectParameter middleNameParameter;
            if (middleName != null)
            {
                middleNameParameter = new ObjectParameter("MiddleName", middleName);
            }
            else
            {
                middleNameParameter = new ObjectParameter("MiddleName", typeof(global::System.String));
            }
    
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("LastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("LastName", typeof(global::System.String));
            }
    
            ObjectParameter networkIDParameter;
            if (networkID != null)
            {
                networkIDParameter = new ObjectParameter("NetworkID", networkID);
            }
            else
            {
                networkIDParameter = new ObjectParameter("NetworkID", typeof(global::System.String));
            }
    
            ObjectParameter emailAddressParameter;
            if (emailAddress != null)
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", emailAddress);
            }
            else
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", typeof(global::System.String));
            }
    
            ObjectParameter organizationIDParameter;
            if (organizationID.HasValue)
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", organizationID);
            }
            else
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", typeof(global::System.Int32));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("Password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("Password", typeof(global::System.String));
            }
    
            ObjectParameter userGuidParameter;
            if (userGuid.HasValue)
            {
                userGuidParameter = new ObjectParameter("UserGuid", userGuid);
            }
            else
            {
                userGuidParameter = new ObjectParameter("UserGuid", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("CreateUser", firstNameParameter, middleNameParameter, lastNameParameter, networkIDParameter, emailAddressParameter, organizationIDParameter, passwordParameter, userGuidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userGUID">No Metadata Documentation available.</param>
        public int EvaluateUserMediaSets(Nullable<global::System.Guid> userGUID)
        {
            ObjectParameter userGUIDParameter;
            if (userGUID.HasValue)
            {
                userGUIDParameter = new ObjectParameter("UserGUID", userGUID);
            }
            else
            {
                userGUIDParameter = new ObjectParameter("UserGUID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("EvaluateUserMediaSets", userGUIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mediaSetName">No Metadata Documentation available.</param>
        public int SearchMediaSet(global::System.String mediaSetName)
        {
            ObjectParameter mediaSetNameParameter;
            if (mediaSetName != null)
            {
                mediaSetNameParameter = new ObjectParameter("MediaSetName", mediaSetName);
            }
            else
            {
                mediaSetNameParameter = new ObjectParameter("MediaSetName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SearchMediaSet", mediaSetNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userGUID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> EvaluateUserMediaSets1(Nullable<global::System.Guid> userGUID)
        {
            ObjectParameter userGUIDParameter;
            if (userGUID.HasValue)
            {
                userGUIDParameter = new ObjectParameter("UserGUID", userGUID);
            }
            else
            {
                userGUIDParameter = new ObjectParameter("UserGUID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("EvaluateUserMediaSets1", userGUIDParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContentServices_SourceForgeModel", Name="AdministrativeUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdministrativeUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdministrativeUser object.
        /// </summary>
        /// <param name="userGuid">Initial value of the UserGuid property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        public static AdministrativeUser CreateAdministrativeUser(global::System.Guid userGuid, global::System.String firstName, global::System.String lastName, global::System.String emailAddress)
        {
            AdministrativeUser administrativeUser = new AdministrativeUser();
            administrativeUser.UserGuid = userGuid;
            administrativeUser.FirstName = firstName;
            administrativeUser.LastName = lastName;
            administrativeUser.EmailAddress = emailAddress;
            return administrativeUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserGuid
        {
            get
            {
                return _UserGuid;
            }
            set
            {
                if (_UserGuid != value)
                {
                    OnUserGuidChanging(value);
                    ReportPropertyChanging("UserGuid");
                    _UserGuid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserGuid");
                    OnUserGuidChanged();
                }
            }
        }
        private global::System.Guid _UserGuid;
        partial void OnUserGuidChanging(global::System.Guid value);
        partial void OnUserGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NetworkID
        {
            get
            {
                return _NetworkID;
            }
            set
            {
                OnNetworkIDChanging(value);
                ReportPropertyChanging("NetworkID");
                _NetworkID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NetworkID");
                OnNetworkIDChanged();
            }
        }
        private global::System.String _NetworkID;
        partial void OnNetworkIDChanging(global::System.String value);
        partial void OnNetworkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                if (_FirstName != value)
                {
                    OnFirstNameChanging(value);
                    ReportPropertyChanging("FirstName");
                    _FirstName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FirstName");
                    OnFirstNameChanged();
                }
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                if (_LastName != value)
                {
                    OnLastNameChanging(value);
                    ReportPropertyChanging("LastName");
                    _LastName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LastName");
                    OnLastNameChanged();
                }
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                if (_EmailAddress != value)
                {
                    OnEmailAddressChanging(value);
                    ReportPropertyChanging("EmailAddress");
                    _EmailAddress = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmailAddress");
                    OnEmailAddressChanged();
                }
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContentServices_SourceForgeModel", Name="MediaSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaSet object.
        /// </summary>
        /// <param name="mediaSetName">Initial value of the MediaSetName property.</param>
        public static MediaSet CreateMediaSet(global::System.String mediaSetName)
        {
            MediaSet mediaSet = new MediaSet();
            mediaSet.MediaSetName = mediaSetName;
            return mediaSet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaSetName
        {
            get
            {
                return _MediaSetName;
            }
            set
            {
                if (_MediaSetName != value)
                {
                    OnMediaSetNameChanging(value);
                    ReportPropertyChanging("MediaSetName");
                    _MediaSetName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MediaSetName");
                    OnMediaSetNameChanged();
                }
            }
        }
        private global::System.String _MediaSetName;
        partial void OnMediaSetNameChanging(global::System.String value);
        partial void OnMediaSetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "FK_MediaSetStatic_MediaSet", "MediaSetStatic")]
        public EntityCollection<MediaSetStatic> MediaSetStatics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MediaSetStatic>("ContentServices_SourceForgeModel.FK_MediaSetStatic_MediaSet", "MediaSetStatic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MediaSetStatic>("ContentServices_SourceForgeModel.FK_MediaSetStatic_MediaSet", "MediaSetStatic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "MediaSetRoles", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("ContentServices_SourceForgeModel.MediaSetRoles", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("ContentServices_SourceForgeModel.MediaSetRoles", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "FK_MediaSetDynamic_MediaSet", "MediaSetDynamic")]
        public MediaSetDynamic MediaSetDynamic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaSetDynamic>("ContentServices_SourceForgeModel.FK_MediaSetDynamic_MediaSet", "MediaSetDynamic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaSetDynamic>("ContentServices_SourceForgeModel.FK_MediaSetDynamic_MediaSet", "MediaSetDynamic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MediaSetDynamic> MediaSetDynamicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaSetDynamic>("ContentServices_SourceForgeModel.FK_MediaSetDynamic_MediaSet", "MediaSetDynamic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MediaSetDynamic>("ContentServices_SourceForgeModel.FK_MediaSetDynamic_MediaSet", "MediaSetDynamic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContentServices_SourceForgeModel", Name="MediaSetDynamic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaSetDynamic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaSetDynamic object.
        /// </summary>
        /// <param name="mediaSetName">Initial value of the MediaSetName property.</param>
        /// <param name="searchCriteria">Initial value of the SearchCriteria property.</param>
        public static MediaSetDynamic CreateMediaSetDynamic(global::System.String mediaSetName, global::System.String searchCriteria)
        {
            MediaSetDynamic mediaSetDynamic = new MediaSetDynamic();
            mediaSetDynamic.MediaSetName = mediaSetName;
            mediaSetDynamic.SearchCriteria = searchCriteria;
            return mediaSetDynamic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaSetName
        {
            get
            {
                return _MediaSetName;
            }
            set
            {
                if (_MediaSetName != value)
                {
                    OnMediaSetNameChanging(value);
                    ReportPropertyChanging("MediaSetName");
                    _MediaSetName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MediaSetName");
                    OnMediaSetNameChanged();
                }
            }
        }
        private global::System.String _MediaSetName;
        partial void OnMediaSetNameChanging(global::System.String value);
        partial void OnMediaSetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SearchCriteria
        {
            get
            {
                return _SearchCriteria;
            }
            set
            {
                OnSearchCriteriaChanging(value);
                ReportPropertyChanging("SearchCriteria");
                _SearchCriteria = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SearchCriteria");
                OnSearchCriteriaChanged();
            }
        }
        private global::System.String _SearchCriteria;
        partial void OnSearchCriteriaChanging(global::System.String value);
        partial void OnSearchCriteriaChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "FK_MediaSetDynamic_MediaSet", "MediaSet")]
        public MediaSet MediaSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaSet>("ContentServices_SourceForgeModel.FK_MediaSetDynamic_MediaSet", "MediaSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaSet>("ContentServices_SourceForgeModel.FK_MediaSetDynamic_MediaSet", "MediaSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MediaSet> MediaSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaSet>("ContentServices_SourceForgeModel.FK_MediaSetDynamic_MediaSet", "MediaSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MediaSet>("ContentServices_SourceForgeModel.FK_MediaSetDynamic_MediaSet", "MediaSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContentServices_SourceForgeModel", Name="MediaSetStatic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaSetStatic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaSetStatic object.
        /// </summary>
        /// <param name="mediaSetName">Initial value of the MediaSetName property.</param>
        /// <param name="mediaID">Initial value of the MediaID property.</param>
        public static MediaSetStatic CreateMediaSetStatic(global::System.String mediaSetName, global::System.Int32 mediaID)
        {
            MediaSetStatic mediaSetStatic = new MediaSetStatic();
            mediaSetStatic.MediaSetName = mediaSetName;
            mediaSetStatic.MediaID = mediaID;
            return mediaSetStatic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaSetName
        {
            get
            {
                return _MediaSetName;
            }
            set
            {
                if (_MediaSetName != value)
                {
                    OnMediaSetNameChanging(value);
                    ReportPropertyChanging("MediaSetName");
                    _MediaSetName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MediaSetName");
                    OnMediaSetNameChanged();
                }
            }
        }
        private global::System.String _MediaSetName;
        partial void OnMediaSetNameChanging(global::System.String value);
        partial void OnMediaSetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MediaID
        {
            get
            {
                return _MediaID;
            }
            set
            {
                if (_MediaID != value)
                {
                    OnMediaIDChanging(value);
                    ReportPropertyChanging("MediaID");
                    _MediaID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MediaID");
                    OnMediaIDChanged();
                }
            }
        }
        private global::System.Int32 _MediaID;
        partial void OnMediaIDChanging(global::System.Int32 value);
        partial void OnMediaIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "FK_MediaSetStatic_MediaSet", "MediaSet")]
        public MediaSet MediaSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaSet>("ContentServices_SourceForgeModel.FK_MediaSetStatic_MediaSet", "MediaSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaSet>("ContentServices_SourceForgeModel.FK_MediaSetStatic_MediaSet", "MediaSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MediaSet> MediaSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaSet>("ContentServices_SourceForgeModel.FK_MediaSetStatic_MediaSet", "MediaSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MediaSet>("ContentServices_SourceForgeModel.FK_MediaSetStatic_MediaSet", "MediaSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContentServices_SourceForgeModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleCode">Initial value of the RoleCode property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        /// <param name="modifiedDateTime">Initial value of the ModifiedDateTime property.</param>
        public static Role CreateRole(global::System.String roleCode, global::System.String active, global::System.DateTime createdDateTime, global::System.DateTime modifiedDateTime)
        {
            Role role = new Role();
            role.RoleCode = roleCode;
            role.Active = active;
            role.CreatedDateTime = createdDateTime;
            role.ModifiedDateTime = modifiedDateTime;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleCode
        {
            get
            {
                return _RoleCode;
            }
            set
            {
                if (_RoleCode != value)
                {
                    OnRoleCodeChanging(value);
                    ReportPropertyChanging("RoleCode");
                    _RoleCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleCode");
                    OnRoleCodeChanged();
                }
            }
        }
        private global::System.String _RoleCode;
        partial void OnRoleCodeChanging(global::System.String value);
        partial void OnRoleCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.String _Active;
        partial void OnActiveChanging(global::System.String value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDateTime
        {
            get
            {
                return _ModifiedDateTime;
            }
            set
            {
                OnModifiedDateTimeChanging(value);
                ReportPropertyChanging("ModifiedDateTime");
                _ModifiedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDateTime");
                OnModifiedDateTimeChanged();
            }
        }
        private global::System.DateTime _ModifiedDateTime;
        partial void OnModifiedDateTimeChanging(global::System.DateTime value);
        partial void OnModifiedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedByGuid
        {
            get
            {
                return _CreatedByGuid;
            }
            set
            {
                OnCreatedByGuidChanging(value);
                ReportPropertyChanging("CreatedByGuid");
                _CreatedByGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByGuid");
                OnCreatedByGuidChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedByGuid;
        partial void OnCreatedByGuidChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedByGuid
        {
            get
            {
                return _ModifiedByGuid;
            }
            set
            {
                OnModifiedByGuidChanging(value);
                ReportPropertyChanging("ModifiedByGuid");
                _ModifiedByGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedByGuid");
                OnModifiedByGuidChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedByGuid;
        partial void OnModifiedByGuidChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByGuidChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "FK_UserRoles_Roles", "UserRoles")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("ContentServices_SourceForgeModel.FK_UserRoles_Roles", "UserRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("ContentServices_SourceForgeModel.FK_UserRoles_Roles", "UserRoles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContentServices_SourceForgeModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userGuid">Initial value of the UserGuid property.</param>
        /// <param name="apiClientGuid">Initial value of the ApiClientGuid property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="expirationUtcSeconds">Initial value of the ExpirationUtcSeconds property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        /// <param name="modifiedDateTime">Initial value of the ModifiedDateTime property.</param>
        public static User CreateUser(global::System.Guid userGuid, global::System.Guid apiClientGuid, global::System.String emailAddress, global::System.String firstName, global::System.String lastName, global::System.Int64 expirationUtcSeconds, global::System.String active, global::System.DateTime createdDateTime, global::System.DateTime modifiedDateTime)
        {
            User user = new User();
            user.UserGuid = userGuid;
            user.ApiClientGuid = apiClientGuid;
            user.EmailAddress = emailAddress;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.ExpirationUtcSeconds = expirationUtcSeconds;
            user.Active = active;
            user.CreatedDateTime = createdDateTime;
            user.ModifiedDateTime = modifiedDateTime;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserGuid
        {
            get
            {
                return _UserGuid;
            }
            set
            {
                if (_UserGuid != value)
                {
                    OnUserGuidChanging(value);
                    ReportPropertyChanging("UserGuid");
                    _UserGuid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserGuid");
                    OnUserGuidChanged();
                }
            }
        }
        private global::System.Guid _UserGuid;
        partial void OnUserGuidChanging(global::System.Guid value);
        partial void OnUserGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApiClientGuid
        {
            get
            {
                return _ApiClientGuid;
            }
            set
            {
                OnApiClientGuidChanging(value);
                ReportPropertyChanging("ApiClientGuid");
                _ApiClientGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApiClientGuid");
                OnApiClientGuidChanged();
            }
        }
        private global::System.Guid _ApiClientGuid;
        partial void OnApiClientGuidChanging(global::System.Guid value);
        partial void OnApiClientGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TempPassword
        {
            get
            {
                return _TempPassword;
            }
            set
            {
                OnTempPasswordChanging(value);
                ReportPropertyChanging("TempPassword");
                _TempPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TempPassword");
                OnTempPasswordChanged();
            }
        }
        private global::System.String _TempPassword;
        partial void OnTempPasswordChanging(global::System.String value);
        partial void OnTempPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserToken
        {
            get
            {
                return _UserToken;
            }
            set
            {
                OnUserTokenChanging(value);
                ReportPropertyChanging("UserToken");
                _UserToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserToken");
                OnUserTokenChanged();
            }
        }
        private global::System.String _UserToken;
        partial void OnUserTokenChanging(global::System.String value);
        partial void OnUserTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExpirationUtcSeconds
        {
            get
            {
                return _ExpirationUtcSeconds;
            }
            set
            {
                OnExpirationUtcSecondsChanging(value);
                ReportPropertyChanging("ExpirationUtcSeconds");
                _ExpirationUtcSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationUtcSeconds");
                OnExpirationUtcSecondsChanged();
            }
        }
        private global::System.Int64 _ExpirationUtcSeconds;
        partial void OnExpirationUtcSecondsChanging(global::System.Int64 value);
        partial void OnExpirationUtcSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.String _Active;
        partial void OnActiveChanging(global::System.String value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDateTime
        {
            get
            {
                return _ModifiedDateTime;
            }
            set
            {
                OnModifiedDateTimeChanging(value);
                ReportPropertyChanging("ModifiedDateTime");
                _ModifiedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDateTime");
                OnModifiedDateTimeChanged();
            }
        }
        private global::System.DateTime _ModifiedDateTime;
        partial void OnModifiedDateTimeChanging(global::System.DateTime value);
        partial void OnModifiedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedByGuid
        {
            get
            {
                return _CreatedByGuid;
            }
            set
            {
                OnCreatedByGuidChanging(value);
                ReportPropertyChanging("CreatedByGuid");
                _CreatedByGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByGuid");
                OnCreatedByGuidChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedByGuid;
        partial void OnCreatedByGuidChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedByGuid
        {
            get
            {
                return _ModifiedByGuid;
            }
            set
            {
                OnModifiedByGuidChanging(value);
                ReportPropertyChanging("ModifiedByGuid");
                _ModifiedByGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedByGuid");
                OnModifiedByGuidChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedByGuid;
        partial void OnModifiedByGuidChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UsageGuidelinesAgreementDateTime
        {
            get
            {
                return _UsageGuidelinesAgreementDateTime;
            }
            set
            {
                OnUsageGuidelinesAgreementDateTimeChanging(value);
                ReportPropertyChanging("UsageGuidelinesAgreementDateTime");
                _UsageGuidelinesAgreementDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsageGuidelinesAgreementDateTime");
                OnUsageGuidelinesAgreementDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UsageGuidelinesAgreementDateTime;
        partial void OnUsageGuidelinesAgreementDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUsageGuidelinesAgreementDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegistrationToken
        {
            get
            {
                return _RegistrationToken;
            }
            set
            {
                OnRegistrationTokenChanging(value);
                ReportPropertyChanging("RegistrationToken");
                _RegistrationToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegistrationToken");
                OnRegistrationTokenChanged();
            }
        }
        private global::System.String _RegistrationToken;
        partial void OnRegistrationTokenChanging(global::System.String value);
        partial void OnRegistrationTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NetworkID
        {
            get
            {
                return _NetworkID;
            }
            set
            {
                OnNetworkIDChanging(value);
                ReportPropertyChanging("NetworkID");
                _NetworkID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NetworkID");
                OnNetworkIDChanged();
            }
        }
        private global::System.String _NetworkID;
        partial void OnNetworkIDChanging(global::System.String value);
        partial void OnNetworkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CSAdmin
        {
            get
            {
                return _CSAdmin;
            }
            set
            {
                OnCSAdminChanging(value);
                ReportPropertyChanging("CSAdmin");
                _CSAdmin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CSAdmin");
                OnCSAdminChanged();
            }
        }
        private global::System.String _CSAdmin;
        partial void OnCSAdminChanging(global::System.String value);
        partial void OnCSAdminChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "FK_UserRoles_Users", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("ContentServices_SourceForgeModel.FK_UserRoles_Users", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("ContentServices_SourceForgeModel.FK_UserRoles_Users", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "FK_UserOrganizations_Users", "UserOrganization")]
        public EntityCollection<UserOrganization> UserOrganizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserOrganization>("ContentServices_SourceForgeModel.FK_UserOrganizations_Users", "UserOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserOrganization>("ContentServices_SourceForgeModel.FK_UserOrganizations_Users", "UserOrganization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContentServices_SourceForgeModel", Name="UserOrganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserOrganization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserOrganization object.
        /// </summary>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="userGuid">Initial value of the UserGuid property.</param>
        /// <param name="primaryOrg">Initial value of the PrimaryOrg property.</param>
        public static UserOrganization CreateUserOrganization(global::System.Int32 organizationID, global::System.Guid userGuid, global::System.String primaryOrg)
        {
            UserOrganization userOrganization = new UserOrganization();
            userOrganization.OrganizationID = organizationID;
            userOrganization.UserGuid = userGuid;
            userOrganization.PrimaryOrg = primaryOrg;
            return userOrganization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                if (_OrganizationID != value)
                {
                    OnOrganizationIDChanging(value);
                    ReportPropertyChanging("OrganizationID");
                    _OrganizationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrganizationID");
                    OnOrganizationIDChanged();
                }
            }
        }
        private global::System.Int32 _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Int32 value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserGuid
        {
            get
            {
                return _UserGuid;
            }
            set
            {
                if (_UserGuid != value)
                {
                    OnUserGuidChanging(value);
                    ReportPropertyChanging("UserGuid");
                    _UserGuid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserGuid");
                    OnUserGuidChanged();
                }
            }
        }
        private global::System.Guid _UserGuid;
        partial void OnUserGuidChanging(global::System.Guid value);
        partial void OnUserGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrimaryOrg
        {
            get
            {
                return _PrimaryOrg;
            }
            set
            {
                OnPrimaryOrgChanging(value);
                ReportPropertyChanging("PrimaryOrg");
                _PrimaryOrg = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrimaryOrg");
                OnPrimaryOrgChanged();
            }
        }
        private global::System.String _PrimaryOrg;
        partial void OnPrimaryOrgChanging(global::System.String value);
        partial void OnPrimaryOrgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDateTime
        {
            get
            {
                return _ModifiedDateTime;
            }
            set
            {
                OnModifiedDateTimeChanging(value);
                ReportPropertyChanging("ModifiedDateTime");
                _ModifiedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDateTime");
                OnModifiedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDateTime;
        partial void OnModifiedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedByGUID
        {
            get
            {
                return _CreatedByGUID;
            }
            set
            {
                OnCreatedByGUIDChanging(value);
                ReportPropertyChanging("CreatedByGUID");
                _CreatedByGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByGUID");
                OnCreatedByGUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedByGUID;
        partial void OnCreatedByGUIDChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedByGUID
        {
            get
            {
                return _ModifiedByGUID;
            }
            set
            {
                OnModifiedByGUIDChanging(value);
                ReportPropertyChanging("ModifiedByGUID");
                _ModifiedByGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedByGUID");
                OnModifiedByGUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedByGUID;
        partial void OnModifiedByGUIDChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByGUIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "FK_UserOrganizations_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ContentServices_SourceForgeModel.FK_UserOrganizations_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ContentServices_SourceForgeModel.FK_UserOrganizations_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ContentServices_SourceForgeModel.FK_UserOrganizations_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ContentServices_SourceForgeModel.FK_UserOrganizations_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContentServices_SourceForgeModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="userGUID">Initial value of the UserGUID property.</param>
        /// <param name="roleCode">Initial value of the RoleCode property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        /// <param name="modifiedDateTime">Initial value of the ModifiedDateTime property.</param>
        public static UserRole CreateUserRole(global::System.Guid userGUID, global::System.String roleCode, global::System.String active, global::System.DateTime createdDateTime, global::System.DateTime modifiedDateTime)
        {
            UserRole userRole = new UserRole();
            userRole.UserGUID = userGUID;
            userRole.RoleCode = roleCode;
            userRole.Active = active;
            userRole.CreatedDateTime = createdDateTime;
            userRole.ModifiedDateTime = modifiedDateTime;
            return userRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserGUID
        {
            get
            {
                return _UserGUID;
            }
            set
            {
                if (_UserGUID != value)
                {
                    OnUserGUIDChanging(value);
                    ReportPropertyChanging("UserGUID");
                    _UserGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserGUID");
                    OnUserGUIDChanged();
                }
            }
        }
        private global::System.Guid _UserGUID;
        partial void OnUserGUIDChanging(global::System.Guid value);
        partial void OnUserGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleCode
        {
            get
            {
                return _RoleCode;
            }
            set
            {
                if (_RoleCode != value)
                {
                    OnRoleCodeChanging(value);
                    ReportPropertyChanging("RoleCode");
                    _RoleCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleCode");
                    OnRoleCodeChanged();
                }
            }
        }
        private global::System.String _RoleCode;
        partial void OnRoleCodeChanging(global::System.String value);
        partial void OnRoleCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.String _Active;
        partial void OnActiveChanging(global::System.String value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private global::System.String _IsDefault;
        partial void OnIsDefaultChanging(global::System.String value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDateTime
        {
            get
            {
                return _ModifiedDateTime;
            }
            set
            {
                OnModifiedDateTimeChanging(value);
                ReportPropertyChanging("ModifiedDateTime");
                _ModifiedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDateTime");
                OnModifiedDateTimeChanged();
            }
        }
        private global::System.DateTime _ModifiedDateTime;
        partial void OnModifiedDateTimeChanging(global::System.DateTime value);
        partial void OnModifiedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedByGuid
        {
            get
            {
                return _CreatedByGuid;
            }
            set
            {
                OnCreatedByGuidChanging(value);
                ReportPropertyChanging("CreatedByGuid");
                _CreatedByGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByGuid");
                OnCreatedByGuidChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedByGuid;
        partial void OnCreatedByGuidChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedByGuid
        {
            get
            {
                return _ModifiedByGuid;
            }
            set
            {
                OnModifiedByGuidChanging(value);
                ReportPropertyChanging("ModifiedByGuid");
                _ModifiedByGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedByGuid");
                OnModifiedByGuidChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedByGuid;
        partial void OnModifiedByGuidChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedByGuidChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "FK_UserRoles_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ContentServices_SourceForgeModel.FK_UserRoles_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ContentServices_SourceForgeModel.FK_UserRoles_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ContentServices_SourceForgeModel.FK_UserRoles_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("ContentServices_SourceForgeModel.FK_UserRoles_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "FK_UserRoles_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ContentServices_SourceForgeModel.FK_UserRoles_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ContentServices_SourceForgeModel.FK_UserRoles_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ContentServices_SourceForgeModel.FK_UserRoles_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ContentServices_SourceForgeModel.FK_UserRoles_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ContentServices_SourceForgeModel", "MediaSetRoles", "MediaSet")]
        public EntityCollection<MediaSet> MediaSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MediaSet>("ContentServices_SourceForgeModel.MediaSetRoles", "MediaSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MediaSet>("ContentServices_SourceForgeModel.MediaSetRoles", "MediaSet", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
