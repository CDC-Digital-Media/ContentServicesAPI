// Copyright [2015] [Centers for Disease Control and Prevention] 
// Licensed under the CDC Custom Open Source License 1 (the 'License'); 
// you may not use this file except in compliance with the License. 
// You may obtain a copy of the License at
// 
//   http://t.cdc.gov/O4O
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an 'AS IS' BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Schedule_Model", "FK_ScheduleEntry_ScheduleIntervalType", "ScheduleIntervalType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Gov.Hhs.Cdc.Schedule.ScheduleIntervalType), "ScheduleEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Gov.Hhs.Cdc.Schedule.ScheduleEntry), true)]
[assembly: EdmRelationshipAttribute("Schedule_Model", "FK_ScheduleEntry_ScheduleType", "ScheduleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Gov.Hhs.Cdc.Schedule.ScheduleType), "ScheduleEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Gov.Hhs.Cdc.Schedule.ScheduleEntry), true)]
[assembly: EdmRelationshipAttribute("Schedule_Model", "FK_TaskSchedule_ScheduleEntry", "ScheduleEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Gov.Hhs.Cdc.Schedule.ScheduleEntry), "TaskSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Gov.Hhs.Cdc.Schedule.TaskSchedule), true)]
[assembly: EdmRelationshipAttribute("Schedule_Model", "FK_TaskHistory_TaskSchedule", "TaskSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Gov.Hhs.Cdc.Schedule.TaskSchedule), "TaskHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Gov.Hhs.Cdc.Schedule.TaskHistory), true)]
[assembly: EdmRelationshipAttribute("Schedule_Model", "FK_TaskSchedule_Utility", "Utility", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Gov.Hhs.Cdc.Schedule.Utility), "TaskSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Gov.Hhs.Cdc.Schedule.TaskSchedule), true)]

#endregion

namespace Gov.Hhs.Cdc.Schedule
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ScheduleDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ScheduleDbEntities object using the connection string found in the 'ScheduleDbEntities' section of the application configuration file.
        /// </summary>
        public ScheduleDbEntities() : base("name=ScheduleDbEntities", "ScheduleDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScheduleDbEntities object.
        /// </summary>
        public ScheduleDbEntities(string connectionString) : base(connectionString, "ScheduleDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScheduleDbEntities object.
        /// </summary>
        public ScheduleDbEntities(EntityConnection connection) : base(connection, "ScheduleDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScheduleEntry> ScheduleEntries
        {
            get
            {
                if ((_ScheduleEntries == null))
                {
                    _ScheduleEntries = base.CreateObjectSet<ScheduleEntry>("ScheduleEntries");
                }
                return _ScheduleEntries;
            }
        }
        private ObjectSet<ScheduleEntry> _ScheduleEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScheduleIntervalType> ScheduleIntervalTypes
        {
            get
            {
                if ((_ScheduleIntervalTypes == null))
                {
                    _ScheduleIntervalTypes = base.CreateObjectSet<ScheduleIntervalType>("ScheduleIntervalTypes");
                }
                return _ScheduleIntervalTypes;
            }
        }
        private ObjectSet<ScheduleIntervalType> _ScheduleIntervalTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScheduleType> ScheduleTypes
        {
            get
            {
                if ((_ScheduleTypes == null))
                {
                    _ScheduleTypes = base.CreateObjectSet<ScheduleType>("ScheduleTypes");
                }
                return _ScheduleTypes;
            }
        }
        private ObjectSet<ScheduleType> _ScheduleTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskHistory> TaskHistories
        {
            get
            {
                if ((_TaskHistories == null))
                {
                    _TaskHistories = base.CreateObjectSet<TaskHistory>("TaskHistories");
                }
                return _TaskHistories;
            }
        }
        private ObjectSet<TaskHistory> _TaskHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskSchedule> TaskSchedules
        {
            get
            {
                if ((_TaskSchedules == null))
                {
                    _TaskSchedules = base.CreateObjectSet<TaskSchedule>("TaskSchedules");
                }
                return _TaskSchedules;
            }
        }
        private ObjectSet<TaskSchedule> _TaskSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Utility> Utilities
        {
            get
            {
                if ((_Utilities == null))
                {
                    _Utilities = base.CreateObjectSet<Utility>("Utilities");
                }
                return _Utilities;
            }
        }
        private ObjectSet<Utility> _Utilities;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScheduleEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScheduleEntries(ScheduleEntry scheduleEntry)
        {
            base.AddObject("ScheduleEntries", scheduleEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScheduleIntervalTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScheduleIntervalTypes(ScheduleIntervalType scheduleIntervalType)
        {
            base.AddObject("ScheduleIntervalTypes", scheduleIntervalType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScheduleTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScheduleTypes(ScheduleType scheduleType)
        {
            base.AddObject("ScheduleTypes", scheduleType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskHistories(TaskHistory taskHistory)
        {
            base.AddObject("TaskHistories", taskHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskSchedules(TaskSchedule taskSchedule)
        {
            base.AddObject("TaskSchedules", taskSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Utilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUtilities(Utility utility)
        {
            base.AddObject("Utilities", utility);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Schedule_Model", Name="ScheduleEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScheduleEntry object.
        /// </summary>
        /// <param name="scheduleId">Initial value of the ScheduleId property.</param>
        /// <param name="startDateTime">Initial value of the StartDateTime property.</param>
        /// <param name="scheduleType">Initial value of the ScheduleType property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        /// <param name="modifiedDateTime">Initial value of the ModifiedDateTime property.</param>
        public static ScheduleEntry CreateScheduleEntry(global::System.Int32 scheduleId, global::System.DateTime startDateTime, global::System.String scheduleType, global::System.DateTime createdDateTime, global::System.DateTime modifiedDateTime)
        {
            ScheduleEntry scheduleEntry = new ScheduleEntry();
            scheduleEntry.ScheduleId = scheduleId;
            scheduleEntry.StartDateTime = startDateTime;
            scheduleEntry.ScheduleType = scheduleType;
            scheduleEntry.CreatedDateTime = createdDateTime;
            scheduleEntry.ModifiedDateTime = modifiedDateTime;
            return scheduleEntry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleId
        {
            get
            {
                return _ScheduleId;
            }
            set
            {
                if (_ScheduleId != value)
                {
                    OnScheduleIdChanging(value);
                    ReportPropertyChanging("ScheduleId");
                    _ScheduleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScheduleId");
                    OnScheduleIdChanged();
                }
            }
        }
        private global::System.Int32 _ScheduleId;
        partial void OnScheduleIdChanging(global::System.Int32 value);
        partial void OnScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDateTime
        {
            get
            {
                return _EndDateTime;
            }
            set
            {
                OnEndDateTimeChanging(value);
                ReportPropertyChanging("EndDateTime");
                _EndDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateTime");
                OnEndDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDateTime;
        partial void OnEndDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScheduleType
        {
            get
            {
                return _ScheduleType;
            }
            set
            {
                OnScheduleTypeChanging(value);
                ReportPropertyChanging("ScheduleType");
                _ScheduleType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScheduleType");
                OnScheduleTypeChanged();
            }
        }
        private global::System.String _ScheduleType;
        partial void OnScheduleTypeChanging(global::System.String value);
        partial void OnScheduleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> LastDayOfMonth
        {
            get
            {
                return _LastDayOfMonth;
            }
            set
            {
                OnLastDayOfMonthChanging(value);
                ReportPropertyChanging("LastDayOfMonth");
                _LastDayOfMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastDayOfMonth");
                OnLastDayOfMonthChanged();
            }
        }
        private Nullable<global::System.Boolean> _LastDayOfMonth;
        partial void OnLastDayOfMonthChanging(Nullable<global::System.Boolean> value);
        partial void OnLastDayOfMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScheduleIntervalType
        {
            get
            {
                return _ScheduleIntervalType;
            }
            set
            {
                OnScheduleIntervalTypeChanging(value);
                ReportPropertyChanging("ScheduleIntervalType");
                _ScheduleIntervalType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScheduleIntervalType");
                OnScheduleIntervalTypeChanged();
            }
        }
        private global::System.String _ScheduleIntervalType;
        partial void OnScheduleIntervalTypeChanging(global::System.String value);
        partial void OnScheduleIntervalTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScheduleInterval
        {
            get
            {
                return _ScheduleInterval;
            }
            set
            {
                OnScheduleIntervalChanging(value);
                ReportPropertyChanging("ScheduleInterval");
                _ScheduleInterval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleInterval");
                OnScheduleIntervalChanged();
            }
        }
        private Nullable<global::System.Int32> _ScheduleInterval;
        partial void OnScheduleIntervalChanging(Nullable<global::System.Int32> value);
        partial void OnScheduleIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDateTime
        {
            get
            {
                return _ModifiedDateTime;
            }
            set
            {
                OnModifiedDateTimeChanging(value);
                ReportPropertyChanging("ModifiedDateTime");
                _ModifiedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDateTime");
                OnModifiedDateTimeChanged();
            }
        }
        private global::System.DateTime _ModifiedDateTime;
        partial void OnModifiedDateTimeChanging(global::System.DateTime value);
        partial void OnModifiedDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Schedule_Model", "FK_ScheduleEntry_ScheduleIntervalType", "ScheduleIntervalType")]
        public ScheduleIntervalType ScheduleIntervalType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleIntervalType>("Schedule_Model.FK_ScheduleEntry_ScheduleIntervalType", "ScheduleIntervalType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleIntervalType>("Schedule_Model.FK_ScheduleEntry_ScheduleIntervalType", "ScheduleIntervalType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScheduleIntervalType> ScheduleIntervalType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleIntervalType>("Schedule_Model.FK_ScheduleEntry_ScheduleIntervalType", "ScheduleIntervalType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScheduleIntervalType>("Schedule_Model.FK_ScheduleEntry_ScheduleIntervalType", "ScheduleIntervalType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Schedule_Model", "FK_ScheduleEntry_ScheduleType", "ScheduleType")]
        public ScheduleType ScheduleType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleType>("Schedule_Model.FK_ScheduleEntry_ScheduleType", "ScheduleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleType>("Schedule_Model.FK_ScheduleEntry_ScheduleType", "ScheduleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScheduleType> ScheduleType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleType>("Schedule_Model.FK_ScheduleEntry_ScheduleType", "ScheduleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScheduleType>("Schedule_Model.FK_ScheduleEntry_ScheduleType", "ScheduleType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Schedule_Model", "FK_TaskSchedule_ScheduleEntry", "TaskSchedule")]
        public EntityCollection<TaskSchedule> TaskSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskSchedule>("Schedule_Model.FK_TaskSchedule_ScheduleEntry", "TaskSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskSchedule>("Schedule_Model.FK_TaskSchedule_ScheduleEntry", "TaskSchedule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Schedule_Model", Name="ScheduleIntervalType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleIntervalType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScheduleIntervalType object.
        /// </summary>
        /// <param name="scheduleIntervalType1">Initial value of the ScheduleIntervalType1 property.</param>
        /// <param name="scheduleIntervalName">Initial value of the ScheduleIntervalName property.</param>
        public static ScheduleIntervalType CreateScheduleIntervalType(global::System.String scheduleIntervalType1, global::System.String scheduleIntervalName)
        {
            ScheduleIntervalType scheduleIntervalType = new ScheduleIntervalType();
            scheduleIntervalType.ScheduleIntervalType1 = scheduleIntervalType1;
            scheduleIntervalType.ScheduleIntervalName = scheduleIntervalName;
            return scheduleIntervalType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScheduleIntervalType1
        {
            get
            {
                return _ScheduleIntervalType1;
            }
            set
            {
                if (_ScheduleIntervalType1 != value)
                {
                    OnScheduleIntervalType1Changing(value);
                    ReportPropertyChanging("ScheduleIntervalType1");
                    _ScheduleIntervalType1 = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScheduleIntervalType1");
                    OnScheduleIntervalType1Changed();
                }
            }
        }
        private global::System.String _ScheduleIntervalType1;
        partial void OnScheduleIntervalType1Changing(global::System.String value);
        partial void OnScheduleIntervalType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScheduleIntervalName
        {
            get
            {
                return _ScheduleIntervalName;
            }
            set
            {
                OnScheduleIntervalNameChanging(value);
                ReportPropertyChanging("ScheduleIntervalName");
                _ScheduleIntervalName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScheduleIntervalName");
                OnScheduleIntervalNameChanged();
            }
        }
        private global::System.String _ScheduleIntervalName;
        partial void OnScheduleIntervalNameChanging(global::System.String value);
        partial void OnScheduleIntervalNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDateTime
        {
            get
            {
                return _ModifiedDateTime;
            }
            set
            {
                OnModifiedDateTimeChanging(value);
                ReportPropertyChanging("ModifiedDateTime");
                _ModifiedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDateTime");
                OnModifiedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDateTime;
        partial void OnModifiedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Schedule_Model", "FK_ScheduleEntry_ScheduleIntervalType", "ScheduleEntry")]
        public EntityCollection<ScheduleEntry> ScheduleEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScheduleEntry>("Schedule_Model.FK_ScheduleEntry_ScheduleIntervalType", "ScheduleEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScheduleEntry>("Schedule_Model.FK_ScheduleEntry_ScheduleIntervalType", "ScheduleEntry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Schedule_Model", Name="ScheduleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScheduleType object.
        /// </summary>
        /// <param name="scheduleType1">Initial value of the ScheduleType1 property.</param>
        public static ScheduleType CreateScheduleType(global::System.String scheduleType1)
        {
            ScheduleType scheduleType = new ScheduleType();
            scheduleType.ScheduleType1 = scheduleType1;
            return scheduleType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScheduleType1
        {
            get
            {
                return _ScheduleType1;
            }
            set
            {
                if (_ScheduleType1 != value)
                {
                    OnScheduleType1Changing(value);
                    ReportPropertyChanging("ScheduleType1");
                    _ScheduleType1 = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScheduleType1");
                    OnScheduleType1Changed();
                }
            }
        }
        private global::System.String _ScheduleType1;
        partial void OnScheduleType1Changing(global::System.String value);
        partial void OnScheduleType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScheduleTypeName
        {
            get
            {
                return _ScheduleTypeName;
            }
            set
            {
                OnScheduleTypeNameChanging(value);
                ReportPropertyChanging("ScheduleTypeName");
                _ScheduleTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScheduleTypeName");
                OnScheduleTypeNameChanged();
            }
        }
        private global::System.String _ScheduleTypeName;
        partial void OnScheduleTypeNameChanging(global::System.String value);
        partial void OnScheduleTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDateTime
        {
            get
            {
                return _ModifiedDateTime;
            }
            set
            {
                OnModifiedDateTimeChanging(value);
                ReportPropertyChanging("ModifiedDateTime");
                _ModifiedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDateTime");
                OnModifiedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDateTime;
        partial void OnModifiedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Schedule_Model", "FK_ScheduleEntry_ScheduleType", "ScheduleEntry")]
        public EntityCollection<ScheduleEntry> ScheduleEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScheduleEntry>("Schedule_Model.FK_ScheduleEntry_ScheduleType", "ScheduleEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScheduleEntry>("Schedule_Model.FK_ScheduleEntry_ScheduleType", "ScheduleEntry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Schedule_Model", Name="TaskHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskHistory object.
        /// </summary>
        /// <param name="historyId">Initial value of the HistoryId property.</param>
        /// <param name="utilityId">Initial value of the UtilityId property.</param>
        /// <param name="scheduleId">Initial value of the ScheduleId property.</param>
        /// <param name="startDateTime">Initial value of the StartDateTime property.</param>
        public static TaskHistory CreateTaskHistory(global::System.Int64 historyId, global::System.Int32 utilityId, global::System.Int32 scheduleId, global::System.DateTime startDateTime)
        {
            TaskHistory taskHistory = new TaskHistory();
            taskHistory.HistoryId = historyId;
            taskHistory.UtilityId = utilityId;
            taskHistory.ScheduleId = scheduleId;
            taskHistory.StartDateTime = startDateTime;
            return taskHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HistoryId
        {
            get
            {
                return _HistoryId;
            }
            set
            {
                if (_HistoryId != value)
                {
                    OnHistoryIdChanging(value);
                    ReportPropertyChanging("HistoryId");
                    _HistoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HistoryId");
                    OnHistoryIdChanged();
                }
            }
        }
        private global::System.Int64 _HistoryId;
        partial void OnHistoryIdChanging(global::System.Int64 value);
        partial void OnHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UtilityId
        {
            get
            {
                return _UtilityId;
            }
            set
            {
                OnUtilityIdChanging(value);
                ReportPropertyChanging("UtilityId");
                _UtilityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UtilityId");
                OnUtilityIdChanged();
            }
        }
        private global::System.Int32 _UtilityId;
        partial void OnUtilityIdChanging(global::System.Int32 value);
        partial void OnUtilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleId
        {
            get
            {
                return _ScheduleId;
            }
            set
            {
                OnScheduleIdChanging(value);
                ReportPropertyChanging("ScheduleId");
                _ScheduleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleId");
                OnScheduleIdChanged();
            }
        }
        private global::System.Int32 _ScheduleId;
        partial void OnScheduleIdChanging(global::System.Int32 value);
        partial void OnScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WasSuccessful
        {
            get
            {
                return _WasSuccessful;
            }
            set
            {
                OnWasSuccessfulChanging(value);
                ReportPropertyChanging("WasSuccessful");
                _WasSuccessful = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WasSuccessful");
                OnWasSuccessfulChanged();
            }
        }
        private Nullable<global::System.Boolean> _WasSuccessful;
        partial void OnWasSuccessfulChanging(Nullable<global::System.Boolean> value);
        partial void OnWasSuccessfulChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultText
        {
            get
            {
                return _ResultText;
            }
            set
            {
                OnResultTextChanging(value);
                ReportPropertyChanging("ResultText");
                _ResultText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultText");
                OnResultTextChanged();
            }
        }
        private global::System.String _ResultText;
        partial void OnResultTextChanging(global::System.String value);
        partial void OnResultTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDateTime
        {
            get
            {
                return _EndDateTime;
            }
            set
            {
                OnEndDateTimeChanging(value);
                ReportPropertyChanging("EndDateTime");
                _EndDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateTime");
                OnEndDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDateTime;
        partial void OnEndDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDateTime
        {
            get
            {
                return _ModifiedDateTime;
            }
            set
            {
                OnModifiedDateTimeChanging(value);
                ReportPropertyChanging("ModifiedDateTime");
                _ModifiedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDateTime");
                OnModifiedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDateTime;
        partial void OnModifiedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Schedule_Model", "FK_TaskHistory_TaskSchedule", "TaskSchedule")]
        public TaskSchedule TaskSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskSchedule>("Schedule_Model.FK_TaskHistory_TaskSchedule", "TaskSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskSchedule>("Schedule_Model.FK_TaskHistory_TaskSchedule", "TaskSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskSchedule> TaskScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskSchedule>("Schedule_Model.FK_TaskHistory_TaskSchedule", "TaskSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskSchedule>("Schedule_Model.FK_TaskHistory_TaskSchedule", "TaskSchedule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Schedule_Model", Name="TaskSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskSchedule object.
        /// </summary>
        /// <param name="utilityId">Initial value of the UtilityId property.</param>
        /// <param name="scheduleId">Initial value of the ScheduleId property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        /// <param name="modifiedDateTime">Initial value of the ModifiedDateTime property.</param>
        public static TaskSchedule CreateTaskSchedule(global::System.Int32 utilityId, global::System.Int32 scheduleId, global::System.Boolean active, global::System.DateTime createdDateTime, global::System.DateTime modifiedDateTime)
        {
            TaskSchedule taskSchedule = new TaskSchedule();
            taskSchedule.UtilityId = utilityId;
            taskSchedule.ScheduleId = scheduleId;
            taskSchedule.Active = active;
            taskSchedule.CreatedDateTime = createdDateTime;
            taskSchedule.ModifiedDateTime = modifiedDateTime;
            return taskSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UtilityId
        {
            get
            {
                return _UtilityId;
            }
            set
            {
                if (_UtilityId != value)
                {
                    OnUtilityIdChanging(value);
                    ReportPropertyChanging("UtilityId");
                    _UtilityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UtilityId");
                    OnUtilityIdChanged();
                }
            }
        }
        private global::System.Int32 _UtilityId;
        partial void OnUtilityIdChanging(global::System.Int32 value);
        partial void OnUtilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleId
        {
            get
            {
                return _ScheduleId;
            }
            set
            {
                if (_ScheduleId != value)
                {
                    OnScheduleIdChanging(value);
                    ReportPropertyChanging("ScheduleId");
                    _ScheduleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScheduleId");
                    OnScheduleIdChanged();
                }
            }
        }
        private global::System.Int32 _ScheduleId;
        partial void OnScheduleIdChanging(global::System.Int32 value);
        partial void OnScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConfigurationData
        {
            get
            {
                return _ConfigurationData;
            }
            set
            {
                OnConfigurationDataChanging(value);
                ReportPropertyChanging("ConfigurationData");
                _ConfigurationData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConfigurationData");
                OnConfigurationDataChanged();
            }
        }
        private global::System.String _ConfigurationData;
        partial void OnConfigurationDataChanging(global::System.String value);
        partial void OnConfigurationDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Parameter
        {
            get
            {
                return _Parameter;
            }
            set
            {
                OnParameterChanging(value);
                ReportPropertyChanging("Parameter");
                _Parameter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Parameter");
                OnParameterChanged();
            }
        }
        private global::System.String _Parameter;
        partial void OnParameterChanging(global::System.String value);
        partial void OnParameterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDateTime
        {
            get
            {
                return _ModifiedDateTime;
            }
            set
            {
                OnModifiedDateTimeChanging(value);
                ReportPropertyChanging("ModifiedDateTime");
                _ModifiedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDateTime");
                OnModifiedDateTimeChanged();
            }
        }
        private global::System.DateTime _ModifiedDateTime;
        partial void OnModifiedDateTimeChanging(global::System.DateTime value);
        partial void OnModifiedDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Schedule_Model", "FK_TaskSchedule_ScheduleEntry", "ScheduleEntry")]
        public ScheduleEntry ScheduleEntry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleEntry>("Schedule_Model.FK_TaskSchedule_ScheduleEntry", "ScheduleEntry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleEntry>("Schedule_Model.FK_TaskSchedule_ScheduleEntry", "ScheduleEntry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScheduleEntry> ScheduleEntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleEntry>("Schedule_Model.FK_TaskSchedule_ScheduleEntry", "ScheduleEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScheduleEntry>("Schedule_Model.FK_TaskSchedule_ScheduleEntry", "ScheduleEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Schedule_Model", "FK_TaskHistory_TaskSchedule", "TaskHistory")]
        public EntityCollection<TaskHistory> TaskHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskHistory>("Schedule_Model.FK_TaskHistory_TaskSchedule", "TaskHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskHistory>("Schedule_Model.FK_TaskHistory_TaskSchedule", "TaskHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Schedule_Model", "FK_TaskSchedule_Utility", "Utility")]
        public Utility Utility
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utility>("Schedule_Model.FK_TaskSchedule_Utility", "Utility").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utility>("Schedule_Model.FK_TaskSchedule_Utility", "Utility").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Utility> UtilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utility>("Schedule_Model.FK_TaskSchedule_Utility", "Utility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Utility>("Schedule_Model.FK_TaskSchedule_Utility", "Utility", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Schedule_Model", Name="Utility")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Utility : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Utility object.
        /// </summary>
        /// <param name="utilityId">Initial value of the UtilityId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        /// <param name="modifiedDateTime">Initial value of the ModifiedDateTime property.</param>
        public static Utility CreateUtility(global::System.Int32 utilityId, global::System.String name, global::System.String description, global::System.DateTime createdDateTime, global::System.DateTime modifiedDateTime)
        {
            Utility utility = new Utility();
            utility.UtilityId = utilityId;
            utility.Name = name;
            utility.Description = description;
            utility.CreatedDateTime = createdDateTime;
            utility.ModifiedDateTime = modifiedDateTime;
            return utility;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UtilityId
        {
            get
            {
                return _UtilityId;
            }
            set
            {
                if (_UtilityId != value)
                {
                    OnUtilityIdChanging(value);
                    ReportPropertyChanging("UtilityId");
                    _UtilityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UtilityId");
                    OnUtilityIdChanged();
                }
            }
        }
        private global::System.Int32 _UtilityId;
        partial void OnUtilityIdChanging(global::System.Int32 value);
        partial void OnUtilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssemblyLocation
        {
            get
            {
                return _AssemblyLocation;
            }
            set
            {
                OnAssemblyLocationChanging(value);
                ReportPropertyChanging("AssemblyLocation");
                _AssemblyLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssemblyLocation");
                OnAssemblyLocationChanged();
            }
        }
        private global::System.String _AssemblyLocation;
        partial void OnAssemblyLocationChanging(global::System.String value);
        partial void OnAssemblyLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDateTime
        {
            get
            {
                return _ModifiedDateTime;
            }
            set
            {
                OnModifiedDateTimeChanging(value);
                ReportPropertyChanging("ModifiedDateTime");
                _ModifiedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDateTime");
                OnModifiedDateTimeChanged();
            }
        }
        private global::System.DateTime _ModifiedDateTime;
        partial void OnModifiedDateTimeChanging(global::System.DateTime value);
        partial void OnModifiedDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Schedule_Model", "FK_TaskSchedule_Utility", "TaskSchedule")]
        public EntityCollection<TaskSchedule> TaskSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskSchedule>("Schedule_Model.FK_TaskSchedule_Utility", "TaskSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskSchedule>("Schedule_Model.FK_TaskSchedule_Utility", "TaskSchedule", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
